movies$studio[movies$title == "Oliver & Company"] <- "Walt Disney Pictures"
#https://es.wikipedia.org/wiki/Oliver_y_su_pandilla
movies$studio[movies$title == "Attack of the 50 Foot Woman"] <- "Woolner Brothers Pictures Inc."
#https://es.wikipedia.org/wiki/Oliver_y_su_pandilla
movies$studio[movies$title == "Attack of the 50 Foot Woman"] <- "Woolner Brothers Pictures Inc."
#https://es.wikipedia.org/wiki/Oliver_y_su_pandilla
movies$studio[movies$title == "Attack of the 50 Foot Woman "] <- "Woolner Brothers Pictures Inc."
#https://www.imdb.com/title/tt1294790/
#Studio:
movies$studio[movies$title == "Oliver & Company"] <- "Walt Disney Pictures"
summary(movies)
#https://www.imdb.com/title/tt0051380/
movies$studio[movies$title == "Inbred"] <- "Melanie Light"
#https://www.imdb.com/title/tt1723124/fullcredits
movies$studio[movies$title == "Caveman"] <- "United Artists"
#https://es.wikipedia.org/wiki/El_cavern%C3%ADcola
movies$studio[movies$title == "Dirty Sanchez: The Movie"] <- "Vertigo Films"
movies$studio <- as.character(movies$studio)
movies$studio[movies$title == "Oliver & Company"] <- "Walt Disney Pictures"
#https://es.wikipedia.org/wiki/Oliver_y_su_pandilla
movies$studio[movies$title == "Attack of the 50 Foot Woman"] <- "Woolner Brothers Pictures Inc."
#https://www.imdb.com/title/tt0051380/
movies$studio[movies$title == "Inbred"] <- "Melanie Light"
#https://www.imdb.com/title/tt1723124/fullcredits
movies$studio[movies$title == "Caveman"] <- "United Artists"
#https://es.wikipedia.org/wiki/El_cavern%C3%ADcola
movies$studio[movies$title == "Dirty Sanchez: The Movie"] <- "Vertigo Films"
#https://www.rottentomatoes.com/m/dirty_sanchez
movies$studio[movies$title == "The Man Who Sued God"] <- "Australian Film Finance Corporation (AFFC), New South Wales Film & Television Office, Showtime Australia See more"
#https://www.imdb.com/title/tt0268437/
movies$studio[movies$title == "Inserts"] <- "Film and General Productions"
#https://www.filmaffinity.com/es/film740308.html
#Locate the specific missing data
summary(movies)
#https://www.filmaffinity.com/es/film740308.html
movies$studio <- factor(movies$studio)
#Load the data
movies <- get(load("movies.RData"))
#Checking for missing data and its number
sum(is.na(movies))
#Locate the specific missing data
summary(movies)
#Fill the missing information
#Runtime:
movies$runtime[movies$title == "The End of America"] <- 74
#https://www.imdb.com/title/tt1294790/
#Studio:
movies$studio <- as.character(movies$studio)
movies$studio[movies$title == "Oliver & Company"] <- "Walt Disney Pictures"
#https://es.wikipedia.org/wiki/Oliver_y_su_pandilla
movies$studio[movies$title == "Attack of the 50 Foot Woman"] <- "Woolner Brothers Pictures Inc."
#https://www.imdb.com/title/tt0051380/
movies$studio[movies$title == "Inbred"] <- "Melanie Light"
#https://www.rottentomatoes.com/m/dirty_sanchez
movies$studio[movies$title == "The Man Who Sued God"] <- "Australian Film Finance Corporation (AFFC), New South Wales Film & Television Office, Showtime Australia See more"
#https://www.imdb.com/title/tt0268437/
movies$studio[movies$title == "Inserts"] <- "Film and General Productions"
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#https://www.filmaffinity.com/es/film740308.html
movies$studio <- factor(movies$studio)
#Correlation matrix
#https://es.wikipedia.org/wiki/El_cavern%C3%ADcola
movies$studio[movies$title == "Dirty Sanchez: The Movie"] <- "Vertigo Films"
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#Correlation matrix
#https://www.imdb.com/title/tt1723124/fullcredits
movies$studio[movies$title == "Caveman"] <- "United Artists"
View(movies)
#Locate the specific missing data
summary(movies)
#Another way of checkinig which data is missing:
movies[!complete.cases(data['dvd_rel_year']),]
#Another way of checkinig which data is missing:
movies[!complete.cases(data['dvd_rel_year']),]
#Another way of checkinig which data is missing:
movies[!complete.cases(movies['dvd_rel_year']),]
#Another way of checkinig which data is missing:
movies[!complete.cases(movies['dvd_rel_year']),]
movies$dvd_rel_year[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 2003
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
movies$runtime[movies$title == "The End of America"] <- 74
#https://www.imdb.com/title/tt1294790/
#Studio:
movies$studio <- as.character(movies$studio)
movies$studio[movies$title == "Oliver & Company"] <- "Walt Disney Pictures"
#https://es.wikipedia.org/wiki/Oliver_y_su_pandilla
movies$studio[movies$title == "Attack of the 50 Foot Woman"] <- "Woolner Brothers Pictures Inc."
#https://www.imdb.com/title/tt0051380/
movies$studio[movies$title == "Inbred"] <- "Melanie Light"
#https://www.imdb.com/title/tt1723124/fullcredits
movies$studio[movies$title == "Caveman"] <- "United Artists"
#https://es.wikipedia.org/wiki/El_cavern%C3%ADcola
movies$studio[movies$title == "Dirty Sanchez: The Movie"] <- "Vertigo Films"
#https://www.rottentomatoes.com/m/dirty_sanchez
movies$studio[movies$title == "The Man Who Sued God"] <- "Australian Film Finance Corporation (AFFC), New South Wales Film & Television Office, Showtime Australia See more"
#https://www.imdb.com/title/tt0268437/
movies$studio[movies$title == "Inserts"] <- "Film and General Productions"
#https://www.filmaffinity.com/es/film740308.html
movies$studio <- factor(movies$studio)
#Another way of checkinig which data is missing:
#DVD realease date
movies[!complete.cases(movies['dvd_rel_year']),]
movies$dvd_rel_year[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 2003
movies$dvd_rel_month[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 11
movies$dvd_rel_day[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 5
#https://www.imdb.com/title/tt0379730/releaseinfo
movies$dvd_rel_year[movies$title == "The Squeeze"] <- 2015
movies$dvd_rel_month[movies$title == "The Squeeze"] <- 6
movies$dvd_rel_day[movies$title == "The Squeeze"] <- 9
#https://medium.com/@releasebandyal/producer-michael-doven-announces-release-of-the-squeeze-on-dvd-75a982d0a047
movies$dvd_rel_year[movies$title == "Electric Dreams"] <- 1984
#https://en.wikipedia.org/wiki/Electric_Dreams_(film)
movies$dvd_rel_year[movies$title == "The Last Remake of Beau Geste"] <- 2010
movies$dvd_rel_month[movies$title == "The Last Remake of Beau Geste"] <- 1
movies$dvd_rel_day[movies$title == "The Last Remake of Beau Geste"] <- 11
#https://en.wikipedia.org/wiki/The_Last_Remake_of_Beau_Geste
movies$studio[movies$title == "Attack of the 50 Foot Woman "] <- "Woolner Brothers Pictures Inc."
clear
clear()
clean
clean()
movies[!complete.cases(movies['imdb_ratings']),]
movies[!complete.cases(movies['imdb_rating']),]
movies[!complete.cases(movies['imdb_num_votes']),]
movies[!complete.cases(movies['critics_rating']),]
movies[!complete.cases(movies['critics_score']),]
movies[!complete.cases(movies['audience_rating']),]
movies[!complete.cases(movies['audience_score']),]
movies[!complete.cases(movies['best_pic_win']),]
movies[!complete.cases(movies['best_actor_win']),]
movies[!complete.cases(movies['best_actress_win']),]
movies[!complete.cases(movies['best_dir_win']),]
movies[!complete.cases(movies['top200_box']),]
movies[!complete.cases(movies['director']),]
movies$director[movies$title == "Lorenzo's Oil"] <- "George Miller"
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
movies[!complete.cases(movies['actor1']),]
movies[!complete.cases(movies['actor2']),]
movies[!complete.cases(movies['actor3']),]
movies[!complete.cases(movies['actor4']),]
movies[!complete.cases(movies['actor5']),]
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
movies[!complete.cases(movies['imdv_url']),]
movies[!complete.cases(movies['imdb_url']),]
movies[!complete.cases(movies['rt_url']),]
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
#Load the data
movies <- get(load("movies.RData"))
#Checking for missing data and its number
sum(is.na(movies))
#Locate the specific missing data
summary(movies)
#Fill the missing information
#Runtime:
movies$runtime[movies$title == "The End of America"] <- 74
#https://www.imdb.com/title/tt1294790/
#Studio:
movies$studio <- as.character(movies$studio)
movies$studio[movies$title == "Oliver & Company"] <- "Walt Disney Pictures"
#https://es.wikipedia.org/wiki/Oliver_y_su_pandilla
movies$studio[movies$title == "Attack of the 50 Foot Woman"] <- "Woolner Brothers Pictures Inc."
#https://www.imdb.com/title/tt0051380/
movies$studio[movies$title == "Inbred"] <- "Melanie Light"
#https://www.imdb.com/title/tt1723124/fullcredits
movies$studio[movies$title == "Caveman"] <- "United Artists"
#https://es.wikipedia.org/wiki/El_cavern%C3%ADcola
movies$studio[movies$title == "Dirty Sanchez: The Movie"] <- "Vertigo Films"
#https://www.rottentomatoes.com/m/dirty_sanchez
movies$studio[movies$title == "The Man Who Sued God"] <- "Australian Film Finance Corporation (AFFC), New South Wales Film & Television Office, Showtime Australia See more"
#https://www.imdb.com/title/tt0268437/
movies$studio[movies$title == "Inserts"] <- "Film and General Productions"
#https://www.filmaffinity.com/es/film740308.html
movies$studio <- factor(movies$studio)
#Another way of checkinig which data is missing:
#DVD realease date
movies[!complete.cases(movies['dvd_rel_year']),]
movies$dvd_rel_year[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 2003
movies$dvd_rel_month[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 11
movies$dvd_rel_day[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 5
#https://www.imdb.com/title/tt0379730/releaseinfo
movies$dvd_rel_year[movies$title == "The Squeeze"] <- 2015
movies$dvd_rel_month[movies$title == "The Squeeze"] <- 6
movies$dvd_rel_day[movies$title == "The Squeeze"] <- 9
#https://medium.com/@releasebandyal/producer-michael-doven-announces-release-of-the-squeeze-on-dvd-75a982d0a047
movies$dvd_rel_year[movies$title == "Electric Dreams"] <- 1984
#https://en.wikipedia.org/wiki/Electric_Dreams_(film)
movies$dvd_rel_year[movies$title == "The Last Remake of Beau Geste"] <- 2010
movies$dvd_rel_month[movies$title == "The Last Remake of Beau Geste"] <- 1
movies$dvd_rel_day[movies$title == "The Last Remake of Beau Geste"] <- 11
#https://en.wikipedia.org/wiki/The_Last_Remake_of_Beau_Geste
movies[!complete.cases(movies['director']),]
movies$director[movies$title == "Lorenzo's Oil"] <- "George Miller"
#https://es.wikipedia.org/wiki/Lorenzo%27s_Oil_(pel%C3%ADcula)
movies$director[movies$title == "The Ninth Gate"] <- "Roman Polański"
#https://es.wikipedia.org/wiki/The_Ninth_Gate
movies[!complete.cases(movies['actor4']),]
movies$actor4[movies$title == "Attack of the 50 Foot Woman"] <- "Roy Gordon"
#https://www.imdb.com/title/tt0051380/fullcredits/?ref_=tt_ov_st_sm
movies[!complete.cases(movies['actor5']),]
movies$actor5[movies$title == "Attack of the 50 Foot Woman"] <- "George Douglas"
#https://www.imdb.com/title/tt0051380/fullcredits/?ref_=tt_ov_st_sm
movies$actor5[movies$title == "The Illusionist (L'illusionniste)"] <- "Eleanor Tomlinson"
#https://en.wikipedia.org/wiki/The_Illusionist_(2006_film)
summary(movies)
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
#Load the data
movies <- get(load("movies.RData"))
##################################################################################################################################################
#Checking for missing data and its number
sum(is.na(movies))
#Locate the specific missing data
summary(movies)
#Fill the missing information
#Runtime:
movies$runtime[movies$title == "The End of America"] <- 74
#https://www.imdb.com/title/tt1294790/
#Studio:
movies$studio <- as.character(movies$studio)
movies$studio[movies$title == "Oliver & Company"] <- "Walt Disney Pictures"
#https://es.wikipedia.org/wiki/Oliver_y_su_pandilla
movies$studio[movies$title == "Attack of the 50 Foot Woman"] <- "Woolner Brothers Pictures Inc."
#https://www.imdb.com/title/tt0051380/
movies$studio[movies$title == "Inbred"] <- "Melanie Light"
#https://www.imdb.com/title/tt1723124/fullcredits
movies$studio[movies$title == "Caveman"] <- "United Artists"
#https://es.wikipedia.org/wiki/El_cavern%C3%ADcola
movies$studio[movies$title == "Dirty Sanchez: The Movie"] <- "Vertigo Films"
#https://www.rottentomatoes.com/m/dirty_sanchez
movies$studio[movies$title == "The Man Who Sued God"] <- "Australian Film Finance Corporation (AFFC), New South Wales Film & Television Office, Showtime Australia See more"
#https://www.imdb.com/title/tt0268437/
movies$studio[movies$title == "Inserts"] <- "Film and General Productions"
#https://www.filmaffinity.com/es/film740308.html
movies$studio <- factor(movies$studio)
#Another way of checkinig which data is missing:
#DVD realease date
movies[!complete.cases(movies['dvd_rel_year']),]
movies$dvd_rel_year[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 2003
movies$dvd_rel_month[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 11
movies$dvd_rel_day[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 5
#https://www.imdb.com/title/tt0379730/releaseinfo
movies$dvd_rel_year[movies$title == "The Squeeze"] <- 2015
movies$dvd_rel_month[movies$title == "The Squeeze"] <- 6
movies$dvd_rel_day[movies$title == "The Squeeze"] <- 9
#https://medium.com/@releasebandyal/producer-michael-doven-announces-release-of-the-squeeze-on-dvd-75a982d0a047
movies$dvd_rel_year[movies$title == "Electric Dreams"] <- 1984
#https://en.wikipedia.org/wiki/Electric_Dreams_(film)
movies$dvd_rel_year[movies$title == "The Last Remake of Beau Geste"] <- 2010
movies$dvd_rel_month[movies$title == "The Last Remake of Beau Geste"] <- 1
movies$dvd_rel_day[movies$title == "The Last Remake of Beau Geste"] <- 11
#https://en.wikipedia.org/wiki/The_Last_Remake_of_Beau_Geste
movies[!complete.cases(movies['director']),]
movies$director[movies$title == "Lorenzo's Oil"] <- "George Miller"
#https://es.wikipedia.org/wiki/Lorenzo%27s_Oil_(pel%C3%ADcula)
movies$director[movies$title == "The Ninth Gate"] <- "Roman Polański"
#https://es.wikipedia.org/wiki/The_Ninth_Gate
movies[!complete.cases(movies['actor4']),]
movies$actor4[movies$title == "Attack of the 50 Foot Woman"] <- "Roy Gordon"
#https://www.imdb.com/title/tt0051380/fullcredits/?ref_=tt_ov_st_sm
movies[!complete.cases(movies['actor5']),]
movies$actor5[movies$title == "Attack of the 50 Foot Woman"] <- "George Douglas"
#https://www.imdb.com/title/tt0051380/fullcredits/?ref_=tt_ov_st_sm
movies$actor5[movies$title == "The Illusionist (L'illusionniste)"] <- "Eleanor Tomlinson"
#https://en.wikipedia.org/wiki/The_Illusionist_(2006_film)
summary(movies)
sum(is.na(movies))
## Import data set from the web
url="http://lib.stat.cmu.edu/datasets/1993.expo/cereal"
cereals <- read.table(url, header=FALSE, as.is=TRUE, na.strings="-1")
# or from local file
cereals <- read.table("C:\Users\Mariano\Google Drive\eit-health\semestre-1\statistical-data-analysis\labs\lab1a\cereal.txt", header=TRUE, as.is=TRUE, na.strings="-1")
names(cereals) <- c('name','mfr','type','calories','protein','fat','sodium','fiber','carbo',
'sugars','shelf','potass','vitamins','weight','cups')
#Since the missing values do not belong to any a priori critical attribute, we will not delete any instances.
##################################################################################################################################################
movies <- subset(movies, select = -c(imdb_url,rt_url))
#Since the missing values do not belong to any a priori critical attribute, we will not delete any instances.
##################################################################################################################################################
movies <- subset(movies, select = -c(imdb_url,rt_url))
View(movies)
View(movies)
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
source('C:/Users/Mariano/Google Drive/eit-health/semestre-1/statistical-data-analysis/homework/homework-1-1/SDA_HW_2019/Homework 1.1/analisis-nacho.R')
library(ggplot2)
data <- get(load("movies.RData"))
head(data)
data[!complete.cases(data['runtime']),]
data$runtime[data$title == "The End of America"] <- 74
data[!complete.cases(data['director']),]
data$director[data$title == "Lorenzo's Oil"] <- "George Miller"
data$director[data$title == "The Ninth Gate"] <- "Roman Polanski"
data[!complete.cases(data["studio"]),]
data[!complete.cases(data["dvd_rel_year"]),]
data[!complete.cases(data["actor5"]),]
hist(data$audience_score)
ggplot(data, aes(x=audience_score)) + geom_histogram()
ggplot(data, aes(x=critics_score)) + geom_histogram()
ggplot(data, aes(x=imdb_rating)) + geom_histogram()
ggplot(data, aes(x=thtr_rel_year)) + geom_histogram()
ggplot(data, aes(x=imdb_num_votes)) + geom_histogram()
ggplot(data, aes(x=log10(imdb_num_votes))) + geom_histogram()
ggplot(aes(x=forcats::fct_infreq(title_type)), data=data) + geom_bar()
ggplot(aes(x=forcats::fct_infreq(genre)), data=data) + geom_bar()
ggplot(aes(x=forcats::fct_infreq(mpaa_rating)), data=data) + geom_bar()
ggplot(aes(x=forcats::fct_infreq(critics_rating)), data=data) + geom_bar()
ggplot(aes(x=forcats::fct_infreq(audience_rating)), data=data) + geom_bar()
ggplot(data=data, aes(x=audience_score, y=critics_score)) + geom_point() + geom_smooth(method='lm')
ggplot(data=data, aes(x=audience_score, y=imdb_rating)) + geom_point() + geom_smooth(method='lm')
ggplot(data=data, aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=data, aes(x=audience_score, y=critics_score)) + geom_point(aes(col=genre), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Action & Adventure"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Animation"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Art House & International"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Comedy"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Documentary"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Drama"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Horror"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Musical & Performing Arts"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Mystery & Suspense"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Other"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
ggplot(data=subset(data, genre == "Science Fiction & Fantasy"), aes(x=audience_score, y=critics_score)) + geom_point(aes(col=title_type), size=3) + geom_smooth(method='lm')
data[data$best_pic_win]
data[[data$best_pic_win]]
data$best_pic_win
data[data$best_pic_win=="yes"]
data[data$title == "The End of America"]
data$runtime[data$title == "The End of America"]
data[title == "The End of America"]
data[data$title == "The End of America"]
data$title == "The End of America"
data[data$title == "The End of America"]
data[data$title == "The End of America",]
data[data$best_pic_win == "yes",]
data[data$best_pic_win == "yes" || data$best_actor_win == "yes",]
data[data$best_pic_win == "yes" && data$best_actor_win == "yes",]
data[data$best_pic_win == "yes" & data$best_actor_win == "yes",]
data[data$best_pic_win == "yes" | data$best_actor_win == "yes",]
nrow(data[data$best_pic_win == "yes" | data$best_actor_win == "yes" | data$best_actress_win == "yes" | data$best_dir_win == "yes",])
nrow(data[data$best_pic_win == "yes" | data$best_actor_win == "yes" | data$best_actress_win == "yes" | data$best_dir_win == "yes",])
nrow(data)
ggplot(data=data[data$best_pic_win == "yes" | data$best_actor_win == "yes" | data$best_actress_win == "yes" | data$best_dir_win == "yes",],
aes(x=audience_score, y=critics_score)) + geom_point() + geom_smooth(method='lm'))
ggplot(data=data[data$best_pic_win == "yes" | data$best_actor_win == "yes" | data$best_actress_win == "yes" | data$best_dir_win == "yes",],
aes(x=audience_score, y=critics_score)) + geom_point() + geom_smooth(method='lm')
ggplot(data=data[data$best_pic_win == "yes" | data$best_actor_win == "yes" | data$best_actress_win == "yes" | data$best_dir_win == "yes",],
aes(x=audience_score, y=critics_score)) + geom_point() + geom_smooth(method='lm')
ggplot(data=data, aes(x=audience_score, y=critics_score)) + geom_point() + geom_smooth(method='lm')
ggplot(data=data, aes(x=audience_score, y=critics_score)) + geom_point() + geom_smooth(method='lm')
ggplot(data=data, aes(x=audience_score, y=imdb_rating)) + geom_point() + geom_smooth(method='lm')
ggplot(data=data, aes(x=critics_score, y=imdb_rating)) + geom_point() + geom_smooth(method='lm')
ggplot(data=data[data$best_pic_win == "yes" | data$best_actor_win == "yes" | data$best_actress_win == "yes" | data$best_dir_win == "yes",],
aes(x=audience_score, y=critics_score)) + geom_point()
ggplot(data=data, aes(x=audience_score, y=critics_score)) + geom_point()
ggplot(data=data[data$best_pic_win == "yes" | data$best_actor_win == "yes" | data$best_actress_win == "yes" | data$best_dir_win == "yes",],
aes(x=audience_score, y=critics_score)) + geom_point() + geom_smooth(method='lm')
ggplot(data=data, aes(x=audience_score, y=critics_score)) + geom_point() + geom_smooth(method='lm')
install.packages("vcd")
library(dplyr)
library(ggplot2)
library(vcd)
library(scales)
source('D:/Universidad/EIT/UPM/Primer semestre/Statistical Data Analysis/SDA_HW_2019/Homework 1.1/analysis_dave.R')
movies = na.omit(movies)
ggplot(movies, aes(x = as.numeric(imdb_rating), y = imdb_num_votes))+
geom_point(size=1)+
scale_y_continuous(name = "Num Votes (10,000)", labels = c(0,25,50,75,100))+
xlab("Rating")+
ggtitle("Number of IMDB user votes by movie rating")
movies$awards = factor(ifelse((movies$best_actor_win == "yes" & movies$best_actress_win == "yes"),"Best actress and actor",
ifelse((movies$best_actor_win == "no" & movies$best_actress_win == "yes"),"Best actress",
ifelse((movies$best_actor_win == "yes" & movies$best_actress_win == "no"),"Best actor",
"None"))))
ggplot(subset(movies, movies$best_pic_nom == "yes"), aes(x = awards, fill=best_pic_win))+
geom_bar(position=position_dodge())+
labs(x = "Awards won (except best picture)", y = "Number of movies nominated for best picture", fill="Won best pciture")
#Do all the ratings match?
films_2011 = subset(movies, movies$thtr_rel_year> 2011)
film_scores = expand.grid(films = films_2011$title,
metrics = c("Critic", "Audience", "IMDB"))
film_scores$score = c(rescale(log(films_2011$critics_score)),
rescale(log(films_2011$audience_score)),
rescale(log(films_2011$imdb_rating)))
ggplot(film_scores,aes(x=metrics, y=films))+
geom_tile(aes(fill=score))
movies$thtr_rel_month_class= cut(movies$thtr_rel_month, breaks = 12,
labels=c("Jan", "Feb", "Mar", "Apr","May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"))
data_CS=na.omit(movies) %>%
group_by(genre, thtr_rel_month_class) %>%
summarise(N=n(),
avg=mean((audience_score)),
sf= ifelse(N == 1, 1,sd((audience_score))),
se= sf/sqrt(N),
cil=ifelse(N == 1, avg, avg-qt(0.975,N-1)*se),
ciu=ifelse(N == 1, avg,avg+qt(0.975,N-1)*se))
ggplot(data=data_CS, aes(x=thtr_rel_month_class, y=avg))+
geom_errorbar(aes(ymin=cil,ymax=ciu),position=position_dodge())+
geom_point(size=1, position=position_dodge(width=0.1))+
facet_wrap(data_CS$genre)
movies$runtime_range = (ifelse(( movies$runtime < 60),"<1 hour",
ifelse((movies$runtime >= 60 & movies$runtime < 120),"1-2 hours",
ifelse((movies$runtime >= 120 & movies$runtime < 180),"2-3 hours",
ifelse((movies$runtime >= 180 & movies$runtime < 240),"3-4 hours",
ifelse((movies$runtime >= 240 & movies$runtime < 300),"4-5 hours",
ifelse((movies$runtime >= 300),">5 hours",
NA)))))))
ggplot(movies, aes(x =runtime_range, fill=genre))+
geom_bar(position = position_dodge())+
facet_wrap(movies$critics_rating)
min(movies$thtr_rel_year)
max(movies$thtr_rel_year)
#Checking for missing data and its number
sum(is.na(movies))
#Locate the specific missing data
summary(movies)
#Fill the missing information
#Runtime:
movies$runtime[movies$title == "The End of America"] <- 74
#https://www.imdb.com/title/tt1294790/
#Studio:
movies$studio <- as.character(movies$studio)
movies$studio[movies$title == "Oliver & Company"] <- "Walt Disney Pictures"
#https://es.wikipedia.org/wiki/Oliver_y_su_pandilla
movies$studio[movies$title == "Attack of the 50 Foot Woman"] <- "Woolner Brothers Pictures Inc."
#https://www.imdb.com/title/tt0051380/
movies$studio[movies$title == "Inbred"] <- "Melanie Light"
#https://www.imdb.com/title/tt1723124/fullcredits
movies$studio[movies$title == "Caveman"] <- "United Artists"
#https://es.wikipedia.org/wiki/El_cavern%C3%ADcola
movies$studio[movies$title == "Dirty Sanchez: The Movie"] <- "Vertigo Films"
#https://www.rottentomatoes.com/m/dirty_sanchez
movies$studio[movies$title == "The Man Who Sued God"] <- "Australian Film Finance Corporation (AFFC), New South Wales Film & Television Office, Showtime Australia See more"
#https://www.imdb.com/title/tt0268437/
movies$studio[movies$title == "Inserts"] <- "Film and General Productions"
#https://www.filmaffinity.com/es/film740308.html
movies$studio <- factor(movies$studio)
#Another way of checkinig which data is missing:
#DVD realease date
movies[!complete.cases(movies['dvd_rel_year']),]
movies$dvd_rel_year[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 2003
movies$dvd_rel_month[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 11
movies$dvd_rel_day[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <- 5
#https://www.imdb.com/title/tt0379730/releaseinfo
movies$dvd_rel_year[movies$title == "The Squeeze"] <- 2015
movies$dvd_rel_month[movies$title == "The Squeeze"] <- 6
movies$dvd_rel_day[movies$title == "The Squeeze"] <- 9
#https://medium.com/@releasebandyal/producer-michael-doven-announces-release-of-the-squeeze-on-dvd-75a982d0a047
movies$dvd_rel_year[movies$title == "Electric Dreams"] <- 1984
#https://en.wikipedia.org/wiki/Electric_Dreams_(film)
movies$dvd_rel_year[movies$title == "The Last Remake of Beau Geste"] <- 2010
movies$dvd_rel_month[movies$title == "The Last Remake of Beau Geste"] <- 1
movies$dvd_rel_day[movies$title == "The Last Remake of Beau Geste"] <- 11
movies[!complete.cases(movies['director']),]
movies$director[movies$title == "Lorenzo's Oil"] <- "George Miller"
#https://es.wikipedia.org/wiki/Lorenzo%27s_Oil_(pel%C3%ADcula)
movies$director[movies$title == "The Ninth Gate"] <- "Roman Polanski"
movies[!complete.cases(movies['actor4']),]
movies$actor4[movies$title == "Attack of the 50 Foot Woman"] <- "Roy Gordon"
movies[!complete.cases(movies['actor5']),]
movies$actor5[movies$title == "Attack of the 50 Foot Woman"] <- "George Douglas"
#https://www.imdb.com/title/tt0051380/fullcredits/?ref_=tt_ov_st_sm
movies$actor5[movies$title == "The Illusionist (L'illusionniste)"] <- "Eleanor Tomlinson"
summary(movies)
#We delete the columns we are not interested in for the analysis.
movies <- subset(movies, select = -c(imdb_url,rt_url))
#1. What can we say about the relationship between audience scores and at least four of
#the other variables in this dataset?
#Audience score vs Critics score
library(ggplot2)
ggplot(movies, aes(x=audience_score, y=critics_score)) + geom_point() + geom_smooth(method=lm)
#Audience score vs Genre and Audience Score vs Critics Score vs Genre
ggplot(movies, aes(x=reorder(genre, audience_score, FUN = median), y=audience_score, fill=genre)) +geom_boxplot()
movies$score_diff <- movies$audience_score - movies$critics_score
ggplot(movies, aes(x=reorder(genre, score_diff, FUN = median), y=score_diff, fill=genre)) +geom_boxplot()
#Audience score vs Thtre_rel_month
ggplot(movies, aes(x=thtr_rel_month)) +   geom_histogram(color="black", fill="blue")
ggplot(movies, aes(x=thtr_rel_month, y=mean(audience_score))) + geom_point() + geom_smooth(method=lm)
#Audience score vs Best_pic_win
ggplot(movies, aes(x=best_pic_win, y=audience_score, fill=best_pic_win)) +geom_boxplot()
#Audience score vs Best_dir_win
ggplot(movies, aes(x=best_dir_win, y=audience_score, fill=best_dir_win)) +geom_boxplot()
#Audience score vs Best_actor_win/Best_actress_win
ggplot(movies, aes(x=best_actor_win, y=audience_score, fill=best_actor_win)) +geom_boxplot()
ggplot(movies, aes(x=best_actress_win, y=audience_score, fill=best_actress_win)) +geom_boxplot()
#2. Is there a difference in the score given by audience members (or critics) for movies
#of different genres? And for movies with different MPAA ratings? If so, which categories
#seem to be significantly different for each other?
ggplot(movies, aes(x=reorder(genre, audience_score, FUN = median), y=audience_score, fill=genre)) +geom_boxplot()
ggplot(movies, aes(x=reorder(genre, critics_score, FUN = median), y=critics_score, fill=genre)) +geom_boxplot()
ggplot(movies, aes(x=reorder(mpaa_rating, audience_score, FUN = median), y=audience_score, fill=mpaa_rating)) +geom_boxplot()
ggplot(movies, aes(x=reorder(mpaa_rating, critics_score, FUN = median), y=critics_score, fill=mpaa_rating)) +geom_boxplot()
min(data$imdb_num_votes)
max(data$imdb_num_votes)
summary(data$imdb_num_votes)
