) + coord_flip() + theme(legend.position = "none") + ggtitle("Science Fiction & Fantasy")
#Combine the plots...
plot_combined_genre <-
ggarrange(
plot_all,
plot_action,
plot_animation,
plot_art_house,
plot_comedy,
plot_documentary,
plot_drama,
plot_horror,
plot_mistery,
plot_musical,
plot_other,
plot_science,
ncol = 3,
nrow = 4
)
plot_combined_genre
ggplot(data=movies, aes(x = best_pic_nom, y = audience_score, group = best_pic_nom, fill = best_pic_nom)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_actor_win, y = audience_score, group = best_actor_win, fill = best_actor_win)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_actress_win, y = audience_score, group = best_actress_win, fill = best_actress_win)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_dir_win, y = audience_score, group = best_dir_win, fill = best_dir_win)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_pic_nom, y = audience_score, group = best_pic_nom, fill = best_pic_nom)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_pic_nom, y = critics_score, group = best_pic_nom, fill = best_pic_nom)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_pic_nom, y = imdb_rating, group = best_pic_nom, fill = best_pic_nom)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(aes(x=best_pic_nom), data=movies[movies$best_pic_win=="yes",]) + geom_bar()
movies[movies$best_pic_nom=="no" & movies$best_pic_win=="yes",]
movies[movies$best_pic_nom=="no" & movies$best_pic_win=="yes",]$best_pic_nom <- "yes"
ggplot(aes(x=best_actor_win), data=movies[movies$best_pic_nom=="yes",]) + geom_bar()
ggplot(aes(x=best_actress_win), data=movies[movies$best_pic_nom=="yes",]) + geom_bar()
ggplot(aes(x=best_dir_win), data=movies[movies$best_pic_nom=="yes",]) + geom_bar()
best_pic_movies <- subset(movies, c(best_pic_nom == "yes"))
#Add a column showing if they have won another award
best_pic_movies$other_win <- NA
if (best_pic_movies$best_actor_win == "yes" ||
best_pic_movies$best_actress_win == "yes" ||
best_pic_movies$best_dir_win == "yes") {
best_pic_movies$other_win <- "yes"
} else{
best_pic_movies$other_win <- "yes"
}
#Plots...
#Best movies that have won another award
best_movie_another_award <- count(best_pic_movies$other_win)
#Plots...
#Best movies that have won another award
best_movie_another_award <- count(best_pic_movies, other_win)
best_movie_another_award <- best_movie_another_award %>%
arrange((freq)) %>%
mutate(lab.ypos = cumsum(freq) - 0.5 * freq)
best_movie_another_award
source('~/SDA/SDA_HW_2019/Homework 1.1/analisis-nacho.R', echo=TRUE)
setwd("~/SDA/SDA_HW_2019/Homework 1.1")
source('~/SDA/SDA_HW_2019/Homework 1.1/analisis-nacho.R', echo=TRUE)
#Plots...
#Best movies that have won another award
best_movie_another_award <- plyr::count(best_pic_movies$other_win)
best_movie_another_award <- best_movie_another_award %>%
arrange((freq)) %>%
mutate(lab.ypos = cumsum(freq) - 0.5 * freq)
library(ggplot2)
library(ggpubr)
library(plyr)
library(lubridate)
library(dplyr)
library(scales)
library(gridExtra)
movies <- get(load("movies.RData"))
head(movies)
summary(movies)
#Runtime:
movies[!complete.cases(movies['runtime']),]
movies$runtime[movies$title == "The End of America"] <- 74
#https://www.imdb.com/title/tt1294790/
#Director:
movies$director[movies$title == "Lorenzo's Oil"] <- "George Miller"
#https://es.wikipedia.org/wiki/Lorenzo%27s_Oil_(pel%C3%ADcula)
movies$director[movies$title == "The Ninth Gate"] <- "Roman Polanski"
#https://es.wikipedia.org/wiki/The_Ninth_Gate
#Studio:
movies$studio <- as.character(movies$studio)
movies$studio[movies$title == "Oliver & Company"] <-
"Walt Disney Pictures"
#https://es.wikipedia.org/wiki/Oliver_y_su_pandilla
movies$studio[movies$title == "Attack of the 50 Foot Woman"] <-
"Woolner Brothers Pictures Inc."
#https://www.imdb.com/title/tt0051380/
movies$studio[movies$title == "Inbred"] <- "Melanie Light"
#https://www.imdb.com/title/tt1723124/fullcredits
movies$studio[movies$title == "Caveman"] <- "United Artists"
#https://es.wikipedia.org/wiki/El_cavern%C3%ADcola
movies$studio[movies$title == "Dirty Sanchez: The Movie"] <-
"Vertigo Films"
#https://www.rottentomatoes.com/m/dirty_sanchez
movies$studio[movies$title == "The Man Who Sued God"] <-
"Australian Film Finance Corporation (AFFC), New South Wales Film & Television Office, Showtime Australia See more"
#https://www.imdb.com/title/tt0268437/
movies$studio[movies$title == "Inserts"] <-
"Film and General Productions"
#https://www.filmaffinity.com/es/film740308.html
movies$studio <- factor(movies$studio)
#DVD realease date
movies[!complete.cases(movies['dvd_rel_year']), ]
movies$dvd_rel_year[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <-
2003
movies$dvd_rel_month[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <-
11
movies$dvd_rel_day[movies$title == "Charlie: The Life and Art of Charles Chaplin"] <-
5
#https://www.imdb.com/title/tt0379730/releaseinfo
movies$dvd_rel_year[movies$title == "The Squeeze"] <- 2015
movies$dvd_rel_month[movies$title == "The Squeeze"] <- 6
movies$dvd_rel_day[movies$title == "The Squeeze"] <- 9
#https://medium.com/@releasebandyal/producer-michael-doven-announces-release-of-the-squeeze-on-dvd-75a982d0a047
movies$dvd_rel_year[movies$title == "Electric Dreams"] <- 1984
#https://en.wikipedia.org/wiki/Electric_Dreams_(film)
movies$dvd_rel_year[movies$title == "The Last Remake of Beau Geste"] <-
2010
movies$dvd_rel_month[movies$title == "The Last Remake of Beau Geste"] <-
1
movies$dvd_rel_day[movies$title == "The Last Remake of Beau Geste"] <-
11
#https://en.wikipedia.org/wiki/The_Last_Remake_of_Beau_Geste
#Actors:
movies[!complete.cases(movies['actor4']), ]
movies$actor4[movies$title == "Attack of the 50 Foot Woman"] <-
"Roy Gordon"
#https://www.imdb.com/title/tt0051380/fullcredits/?ref_=tt_ov_st_sm
movies[!complete.cases(movies['actor5']), ]
movies$actor5[movies$title == "Attack of the 50 Foot Woman"] <-
"George Douglas"
#https://www.imdb.com/title/tt0051380/fullcredits/?ref_=tt_ov_st_sm
movies$actor5[movies$title == "The Illusionist (L'illusionniste)"] <-
"Eleanor Tomlinson"
#https://en.wikipedia.org/wiki/The_Illusionist_(2006_film)
#Column manipulation
movies$thtr_rel_date <- as.Date(paste0(movies$thtr_rel_year, "-", movies$thtr_rel_month, "-", movies$thtr_rel_day))
movies$dvd_rel_date <- as.Date(paste0(movies$dvd_rel_year, "-", movies$dvd_rel_month, "-", movies$dvd_rel_day))
movies$thtr_rel_decade <- as.numeric(format(movies$thtr_rel_date,"%Y")) - (as.numeric(format(movies$thtr_rel_date,"%Y")) %% 10)
movies$thtr_rel_decade <- as.factor(movies$thtr_rel_decade)
movies$top200_box <- NULL
movies$dvd_rel_day <- NULL
movies$dvd_rel_month <- NULL
movies$dvd_rel_year <- NULL
#movies$thtr_rel_day <- NULL
#movies$thtr_rel_month <- NULL
#movies$thtr_rel_year <- NULL
movies$imdb_url <- NULL
movies$rt_url <- NULL
head(movies)
summary(movies)
ggplot(data=movies, aes(x=audience_score)) + geom_histogram(bins=30, aes(fill = title_type), position = "identity", alpha = 0.7) + scale_color_manual(values = c("#00AFBB", "#E7B800", "#0AFBB0")) + scale_fill_manual(values = c("#00AFBB", "#E7B800", "#0AFBB0"))
ggplot(data=movies, aes(x=audience_score)) + geom_density(aes(color = title_type), kernel = "gaussian")
ggplot(data=movies, aes(x=critics_score)) + geom_histogram(bins=30, aes(fill = title_type), position = "identity", alpha = 0.7) + scale_color_manual(values = c("#00AFBB", "#E7B800", "#0AFBB0")) + scale_fill_manual(values = c("#00AFBB", "#E7B800", "#0AFBB0"))
ggplot(data=movies, aes(x=critics_score)) + geom_density(aes(color = title_type), kernel = "gaussian")
ggplot(data=movies, aes(x=imdb_rating)) + geom_histogram(bins=30, aes(color = title_type), position = "identity", alpha = 0.7) + scale_color_manual(values = c("#00AFBB", "#E7B800", "#0AFBB0")) + scale_fill_manual(values = c("#00AFBB", "#E7B800", "#0AFBB0"))
ggplot(data=movies, aes(x=imdb_rating)) + geom_density(aes(color = title_type), kernel = "gaussian")
ggplot(data=movies, aes(x = reorder(genre, audience_score, median, order=TRUE), y = audience_score, group = genre, fill = genre)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw() + coord_flip()
ggplot(data=movies, aes(x = reorder(genre, critics_score, median, order=TRUE), y = critics_score, group = genre, fill = genre)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw() + coord_flip()
ggplot(data=movies, aes(x = reorder(genre, imdb_rating, median, order=TRUE), y = imdb_rating, group = genre, fill = genre)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw() + coord_flip()
score = list();
score$genre_score_agg = list(
"critics" = aggregate(critics_score ~ genre , movies, mean),
"audience" = aggregate(audience_score ~ genre, movies, mean),
"imdb" = aggregate(imdb_rating ~ genre, movies, mean)
)
score$genre_metrics_grid = expand.grid(year =sort(unique(movies$genre)),
metrics = c("Critic", "Audience", "IMDB"))
score$genre_metrics_grid$genre_score_agg =c(score$genre_score_agg$critics$critics_score,
score$genre_score_agg$audience$audience_score,
score$genre_score_agg$imdb$imdb_rating)
score$genre_metrics_grid$genre_score_agg_rescaled =
c(
rescale(score$genre_score_agg$critics$critics_score, from=(c(1,100))),
rescale(score$genre_score_agg$audience$audience_score, from=(c(1,100))),
rescale(score$genre_score_agg$imdb$imdb_rating, from=(c(1,10))))
ggplot(score$genre_metrics_grid)+
geom_tile(aes(x=metrics, y=year,fill=genre_score_agg_rescaled))+
scale_fill_distiller( limits=c(0,1), palette = "RdPu")
plot_number_movies_per_genre <-
qplot(movies$genre, fill = movies$genre) + theme(legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1)) + ggtitle("Number of movies per     genre") +
xlab("Genre") + ylab("Number of movies")
mean_score <-
data.frame(
"Score" = c(
mean(movies$imdb_rating),
mean(movies$audience_score),
mean(movies$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_all <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("All genres")
#Action and adventure
action_adventure <- subset(movies, genre == "Action & Adventure")
mean_score <-
data.frame(
"Score" = c(
mean(action_adventure$imdb_rating),
mean(action_adventure$audience_score),
mean(action_adventure$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_action <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Action & Adventure")
#Animation
animation <- subset(movies, genre == "Animation")
mean_score <-
data.frame(
"Score" = c(
mean(animation$imdb_rating),
mean(animation$audience_score),
mean(animation$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_animation <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Animation")
#Art House & International
art_house <- subset(movies, genre == "Art House & International")
mean_score <-
data.frame(
"Score" = c(
mean(art_house$imdb_rating),
mean(art_house$audience_score),
mean(art_house$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_art_house <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Art House & International")
#Comedy
comedy <- subset(movies, genre == "Comedy")
mean_score <-
data.frame(
"Score" = c(
mean(comedy$imdb_rating),
mean(comedy$audience_score),
mean(comedy$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_comedy <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Comedy")
#Documentary
documentary <- subset(movies, genre == "Documentary")
mean_score <-
data.frame(
"Score" = c(
mean(documentary$imdb_rating),
mean(documentary$audience_score),
mean(documentary$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_documentary <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Documentary")
#Drama
drama <- subset(movies, genre == "Drama")
mean_score <-
data.frame(
"Score" = c(
mean(drama$imdb_rating),
mean(drama$audience_score),
mean(drama$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_drama <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Drama")
#Horror
horror <- subset(movies, genre == "Horror")
mean_score <-
data.frame(
"Score" = c(
mean(horror$imdb_rating),
mean(horror$audience_score),
mean(horror$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_horror <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Horror")
#Musical & Performing Arts
musical <- subset(movies, genre == "Musical & Performing Arts")
mean_score <-
data.frame(
"Score" = c(
mean(musical$imdb_rating),
mean(musical$audience_score),
mean(musical$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_musical <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Musical & Performing Arts")
#Mystery & Suspense
mistery <- subset(movies, genre == "Mystery & Suspense")
mean_score <-
data.frame(
"Score" = c(
mean(mistery$imdb_rating),
mean(mistery$audience_score),
mean(mistery$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_mistery <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Mistery & Suspense")
#Other
other <- subset(movies, genre == "Other")
mean_score <-
data.frame(
"Score" = c(
mean(other$imdb_rating),
mean(other$audience_score),
mean(other$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_other <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Other")
#Science Fiction & Fantasy
science <- subset(movies, genre == "Science Fiction & Fantasy")
mean_score <-
data.frame(
"Score" = c(
mean(science$imdb_rating),
mean(science$audience_score),
mean(science$critics_score)
),
"Source" = c("IMDB", "Audience", "Critics")
)
plot_science <- ggplot(mean_score) + geom_linerange(aes(
x = Source,
ymin = max(c(0, min(Score) - 10)),
ymax = Score,
colour = Source
),
position = position_dodge(width = 1)) +  geom_point(
aes(x = Source, y = Score, colour = Source),
position = position_dodge(width = 1),
size = 3
) + coord_flip() + theme(legend.position = "none") + ggtitle("Science Fiction & Fantasy")
#Combine the plots...
plot_combined_genre <-
ggarrange(
plot_all,
plot_action,
plot_animation,
plot_art_house,
plot_comedy,
plot_documentary,
plot_drama,
plot_horror,
plot_mistery,
plot_musical,
plot_other,
plot_science,
ncol = 3,
nrow = 4
)
plot_combined_genre
ggplot(data=movies, aes(x = best_pic_nom, y = audience_score, group = best_pic_nom, fill = best_pic_nom)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_actor_win, y = audience_score, group = best_actor_win, fill = best_actor_win)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_actress_win, y = audience_score, group = best_actress_win, fill = best_actress_win)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_dir_win, y = audience_score, group = best_dir_win, fill = best_dir_win)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_pic_nom, y = audience_score, group = best_pic_nom, fill = best_pic_nom)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_pic_nom, y = critics_score, group = best_pic_nom, fill = best_pic_nom)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(data=movies, aes(x = best_pic_nom, y = imdb_rating, group = best_pic_nom, fill = best_pic_nom)) + geom_boxplot(alpha = .7) + geom_jitter(width = .05, alpha = .4) + guides(fill = "none") + theme_bw()
ggplot(aes(x=best_pic_nom), data=movies[movies$best_pic_win=="yes",]) + geom_bar()
movies[movies$best_pic_nom=="no" & movies$best_pic_win=="yes",]
movies[movies$best_pic_nom=="no" & movies$best_pic_win=="yes",]$best_pic_nom <- "yes"
ggplot(aes(x=best_actor_win), data=movies[movies$best_pic_nom=="yes",]) + geom_bar()
ggplot(aes(x=best_actress_win), data=movies[movies$best_pic_nom=="yes",]) + geom_bar()
ggplot(aes(x=best_dir_win), data=movies[movies$best_pic_nom=="yes",]) + geom_bar()
best_pic_movies <- subset(movies, c(best_pic_nom == "yes"))
#Add a column showing if they have won another award
best_pic_movies$other_win <- NA
if (best_pic_movies$best_actor_win == "yes" ||
best_pic_movies$best_actress_win == "yes" ||
best_pic_movies$best_dir_win == "yes") {
best_pic_movies$other_win <- "yes"
} else{
best_pic_movies$other_win <- "yes"
}
#Plots...
#Best movies that have won another award
best_movie_another_award <- plyr::count(best_pic_movies$other_win)
best_movie_another_award <- best_movie_another_award %>%
arrange((freq)) %>%
mutate(lab.ypos = cumsum(freq) - 0.5 * freq)
pie_another_award <-
ggplot(best_movie_another_award, aes(x = "", y = freq, fill = x)) +
geom_bar(width = 1,
stat = "identity",
color = "white") +
coord_polar("y", start = 0) +
theme_void() +
geom_text(aes(label = signif((freq / 7) * 100), digits = 2),
position = position_stack(vjust = 0.5),
color = "white") +
labs(fill = "Another award") +
ggtitle("Best movies with another award") +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
scale_fill_manual(values = "#00BFC4")
#Best movies that have won best actor award
best_movie_best_actor <- count(best_pic_movies$best_actor_win)
setwd("~/SDA/SDA_HW_2019/Homework 1.1")
